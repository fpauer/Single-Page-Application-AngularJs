function moduleConfig($stateProvider,$urlRouterProvider,$authProvider,$provide,LoggerProvider){LoggerProvider.enabled(!0),$authProvider.loginUrl="/api/auth/authenticate",$urlRouterProvider.otherwise("/meal"),$stateProvider.state("meal",{url:"/meal",templateUrl:"/js/tpl/meal.html",controller:"MealsController"}).state("login",{url:"/login",templateUrl:"/js/tpl/login.html",controller:"AuthController"}).state("register",{url:"/register",templateUrl:"/js/tpl/register.html",controller:"AuthController"}).state("users",{url:"/users",templateUrl:"/js/tpl/users.html",controller:"UsersController"}).state("settings",{url:"/settings",templateUrl:"/js/tpl/settings.html",controller:"SettingsController"})}function AuthController($auth,$state,$http,$rootScope,$scope,Logger){var logger=Logger.getInstance("AuthController");$scope.apiPath="/api/auth",$scope.email="",$scope.password="",$scope.newUser={},$scope.loginError=!1,$scope.loginErrorText="",$scope.login=function(){if($scope.$broadcast("show-errors-check-validity"),$scope.loginForm.$valid){var credentials={email:$scope.email,password:$scope.password};$auth.login(credentials).then(function(response){function complete(response,status,headers,config){void 0!==response&&($rootScope.currentUser=response.data.user,$rootScope.numberOfCalories=parseInt(response.data.user.calories_expected),$rootScope.menus=response.data.menus,$state.go("meal"))}function failed(e){e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["getting user data",e.data.description]),$rootScope.currentUser=null,$location.url("/login")}$scope.loginError=!1,$scope.loginErrorText="",$http.get($scope.apiPath+"/authenticate/user").then(complete)["catch"](failed)},function(e){e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["login",e.data.description]),$scope.loginError=!0,$scope.loginErrorText=e.data.message})}},$scope.register=function(){function registerComplete(response,status,headers,config){void 0!==response.data.errors&&0!=response.data.errors.length||($scope.email=$scope.newUser.email,$scope.password=$scope.newUser.password,$scope.login())}function registerFailed(e){void 0!==e.data.errors?($scope.registerError=!0,void 0!==e.data.errors.password&&($scope.registerErrors=e.data.errors.password),void 0!==e.data.errors.email&&($scope.registerErrors=e.data.errors.email)):e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["register",e.data.description])}$scope.$broadcast("show-errors-check-validity"),$scope.loginForm.$valid&&$http.post($scope.apiPath+"/register",$scope.newUser).then(registerComplete)["catch"](registerFailed)}}function MealsController($http,$rootScope,$scope,$timeout,$filter,Logger,modalService){function watchSearch(newVal,oldVal){$scope.dateFromOptions.maxDate=$scope.dateTo,$scope.dateToOptions.minDate=$scope.dateFrom,$scope.search()}var logger=Logger.getInstance("MealsController");$scope.apiDataFormat="yyyy-MM-dd",$scope.apiPath="/api/user/",$scope.meals=[],$scope.action="New",$scope.hour=(new Date).getHours(),$scope.minute=(new Date).getMinutes(),$scope.hourFrom=0,$scope.minuteFrom=0,$scope.hourTo=23,$scope.minuteTo=59,$scope.caloriesConsumedToday=0,null!=$rootScope.currentUser&&($scope.userSelected=$rootScope.currentUser.id),$scope.users=[],$scope.loadUsers=function(){function complete(response,status,headers,config){$scope.users=response.data}function failed(e){e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["read Users",e.data.description])}null!=$rootScope.currentUser&&$http.get($scope.apiPath+$rootScope.currentUser.id+"/users").then(complete)["catch"](failed)},$scope.loadUsers(),$scope.clean=function(index){$scope.$broadcast("show-errors-reset"),$scope.showError(!1),$scope.action="New",$scope.hour=(new Date).getHours(),$scope.minute=(new Date).getMinutes(),$scope.newMeal={id:0,description:"",calories:"",consumed_at:new Date}},$scope.edit=function(index){$scope.action="Edit",$scope.newMeal=$scope.meals[index],"string"==typeof $scope.newMeal.consumed_at&&($scope.newMeal.consumed_at=new Date($scope.newMeal.consumed_at.replace(/\s/,"T"))),$scope.hour=$scope.newMeal.consumed_at.getHours(),$scope.minute=$scope.newMeal.consumed_at.getMinutes()},$scope.search=function(){function complete(response,status,headers,config){$scope.meals=response.data;for(var i=0;i<$scope.meals.length;i++)"string"==typeof $scope.meals[i].consumed_at&&($scope.meals[i].consumed_at=new Date($scope.meals[i].consumed_at.replace(/\s/,"T")))}function failed(e){e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["search",e.data.description])}var urlSearch=$scope.apiPath+$scope.userSelected+"/meals";urlSearch+="/"+$filter("date")($scope.dateFrom,$scope.apiDataFormat),urlSearch+="/"+$filter("date")($scope.dateTo,$scope.apiDataFormat),urlSearch+="/"+$filter("formatter")($scope.hourFrom)+":"+$filter("formatter")($scope.minuteFrom),urlSearch+="/"+$filter("formatter")($scope.hourTo)+":"+$filter("formatter")($scope.minuteTo),$http.get(urlSearch).then(complete)["catch"](failed)},$scope.save=function(){function complete(response,status,headers,config){$scope.successTextAlert="Saved successfully!",$scope.showSuccess(!0),$scope.init()}function failed(e){e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["save meal",e.data.description])}if($scope.$broadcast("show-errors-check-validity"),$scope.addMealForm.$valid){var newDate=$scope.newMeal.consumed_at,year=newDate.getUTCFullYear(),month=newDate.getUTCMonth(),day=newDate.getUTCDate();newDate.getDate()!=day&&(day=newDate.getDate()),newDate.setUTCHours(parseInt($scope.hour)),newDate.setMinutes(parseInt($scope.minute)),newDate.setUTCFullYear(year),newDate.setUTCMonth(month),newDate.setUTCDate(day),$scope.newMeal.consumed_at=newDate,0==$scope.newMeal.id?($scope.userSelected=$rootScope.currentUser.id,$http.post($scope.apiPath+$scope.userSelected+"/meals",$scope.newMeal).then(complete)["catch"](failed)):$http.put($scope.apiPath+$scope.newMeal.user_id+"/meals/"+$scope.newMeal.id,$scope.newMeal).then(complete)["catch"](failed)}},$scope["delete"]=function($index){function complete(response,status,headers,config){$scope.successTextAlert="Deleted successfully!",$scope.showSuccess(!0),$scope.init()}function failed(e){e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["delete meal",e.data.description])}$http["delete"]($scope.apiPath+$scope.userSelected+"/meals/"+$scope.meals[$index].id).then(complete)["catch"](failed)},$scope.confirmDelete=function($index){var modalOptions={closeButtonText:"Cancel",actionButtonText:"Delete Meal",headerText:'Delete the meal "'+$scope.meals[$index].description+'" ?',bodyText:"Are you sure you want to delete this ?"};modalService.showModal({},modalOptions).then(function(result){$scope["delete"]($index)})},$scope.format="MM-dd-yyyy",$scope.formatFull="MM-dd-yyyy HH:mm",$scope.dateOptions={formatYear:"yy",maxDate:new Date,startingDay:1},$scope.dateFromOptions={formatYear:"yy",maxDate:new Date,startingDay:1},$scope.dateToOptions={formatYear:"yy",minDate:$scope.dateFrom,maxDate:new Date,startingDay:1},$scope.today=function(){$scope.dateFrom=new Date,$scope.dateTo=new Date},$scope.today(),$scope.openDateFrom=function(){$scope.popupDateFrom.opened=!0},$scope.openDateTo=function(){$scope.popupDateTo.opened=!0},$scope.openEdit=function(){$scope.popupEdit.opened=!0},$scope.popupDateFrom={opened:!1},$scope.popupDateTo={opened:!1},$scope.popupEdit={opened:!1},$scope.initChart=function(){$scope.chartOptions={thickness:10},$scope.chartData=[{label:"Consumed",value:0,color:"#FA6E6E"},{label:"Available",value:0,color:"#93b874"}]},$scope.updateChart=function(){function complete(response,status,headers,config){$scope.caloriesConsumedToday=0;for(var todayMeals=response.data,i=0;i<todayMeals.length;i++)$scope.caloriesConsumedToday+=parseInt(todayMeals[i].calories);$scope.chartData[0].label=$scope.caloriesConsumedToday+" Consumed",$scope.chartData[0].value=$scope.caloriesConsumedToday;var remained=parseInt($rootScope.numberOfCalories)-$scope.caloriesConsumedToday;0>remained?$scope.chartData=[{label:$scope.caloriesConsumedToday+" Consumed",value:parseInt($scope.caloriesConsumedToday),color:"#FA6E6E"},{label:"Enough for Today!",value:0,color:"#93b874"}]:$scope.chartData=[{label:$scope.caloriesConsumedToday+" Consumed",value:parseInt($scope.caloriesConsumedToday),color:"#FA6E6E"},{label:remained+" Available",value:remained,color:"#93b874"}]}function failed(e){e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["getting calories consumed",e.data.description])}var urlToday=$scope.apiPath+$scope.currentUser.id+"/meals";urlToday+="/"+$filter("date")(new Date,$scope.apiDataFormat),urlToday+="/"+$filter("date")(new Date,$scope.apiDataFormat)+"/00:00/23:59",$http.get(urlToday).then(complete)["catch"](failed)},$scope.successTextAlert="Saved successfully!",$scope.showSuccessAlert=!1,$scope.showSuccess=function(value){$scope.showSuccessAlert=value,$timeout(function(){$scope.showSuccessAlert=!1},3e3)},$scope.showErrorAlert=!1,$scope.showError=function(value){$scope.showErrorAlert=value},$scope.$watchGroup(["userSelected","dateFrom","dateTo","hourFrom","minuteFrom","hourTo","minuteTo"],watchSearch),$scope.canEdit=function(){return null!=$scope.currentUser&&$scope.userSelected==$scope.currentUser.id?!0:null!=$scope.currentUser&&$scope.userSelected!=$scope.currentUser.id&&$scope.currentUser.role>2},$scope.init=function(){null!=$rootScope.currentUser&&($scope.search(),$scope.clean(),$scope.initChart(),$scope.updateChart(),$scope.updateChart())},$scope.init()}function UsersController($http,$scope,$timeout,modalService,Logger){var logger=Logger.getInstance("UsersController");$scope.apiPath="/api/user/",$scope.action="New",$scope.availableRoles=[{id:"1",name:"User"},{id:"2",name:"Manager"},{id:"3",name:"Admin"}],$scope.users=[],$scope.clean=function(index){$scope.$broadcast("show-errors-reset"),$scope.showError(!1),$scope.action="New",$scope.newUser={id:0,name:"",email:"",password:"",password_confirmation:"",role:{id:"1",name:"User"}}},$scope.edit=function(index){$scope.action="Edit",$scope.newUser.id=$scope.users[index].id,$scope.newUser.name=$scope.users[index].name,$scope.newUser.email=$scope.users[index].email,$scope.newUser.role=$scope.availableRoles[$scope.users[index].role-1]},$scope.init=function(){function complete(response,status,headers,config){$scope.users=response.data}function failed(e){e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["read Users",e.data.description])}$scope.clean(),$http.get($scope.apiPath).then(complete)["catch"](failed)},$scope.save=function(){function complete(response,status,headers,config){void 0!==response.data.errors&&0!=response.data.errors.length||($scope.successTextAlert="Saved successfully!",$scope.showSuccess(!0),$scope.init())}function failed(e){void 0!==e.data.errors?($scope.errors=[],void 0!==e.data.errors.password&&(e.errors=$scope.errors.concat(e.data.errors.password)),void 0!==e.data.errors.password_confirmation&&($scope.errors=$scope.errors.concat(e.data.errors.password_confirmation)),void 0!==e.data.errors.email&&($scope.errors=$scope.errors.concat(e.data.errors.email)),$scope.showError(!0)):e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["save Users",e.data.description])}$scope.$broadcast("show-errors-check-validity"),$scope.addUserForm.$valid&&($scope.showError(!1),0==$scope.newUser.id?$http.post($scope.apiPath,$scope.newUser).then(complete)["catch"](failed):$http.put($scope.apiPath+$scope.newUser.id,$scope.newUser).then(complete)["catch"](failed))},$scope["delete"]=function($index){function complete(response,status,headers,config){$scope.successTextAlert="Deleted successfully!",$scope.showSuccess(!0),$scope.init()}function failed(e){e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["delete User",e.data.description])}$http["delete"]($scope.apiPath+$scope.users[$index].id).then(complete)["catch"](failed)},$scope.confirmDelete=function($index){var modalOptions={closeButtonText:"Cancel",actionButtonText:"Delete User",headerText:'Delete the user "'+$scope.users[$index].name+'" ?',bodyText:"Are you sure you want to delete this ?"};modalService.showModal({},modalOptions).then(function(result){$scope["delete"]($index)})},$scope.successTextAlert="Saved successfully!",$scope.showSuccessAlert=!1,$scope.showSuccess=function(value){$scope.showSuccessAlert=value,$timeout(function(){$scope.showSuccessAlert=!1},3e3)},$scope.errors=[],$scope.showErrorAlert=!1,$scope.showError=function(value){$scope.showErrorAlert=value},$scope.init()}function SettingsController($http,$rootScope,$scope,Logger){var logger=Logger.getInstance("SettingsController");$scope.apiPath="/api/user/"+$rootScope.currentUser.id+"/calories",$scope.onlyNumbers=/^\d+$/,$scope.numberOfCalories=$rootScope.numberOfCalories,$scope.save=function(){function complete(response,status,headers,config){$scope.showSuccess(!0)}function failed(e){e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["read Users",e.data.description])}$rootScope.numberOfCalories=$scope.numberOfCalories,$http.put($scope.apiPath,{calories_expected:$rootScope.numberOfCalories}).then(complete)["catch"](failed)},$scope.successTextAlert="Settings saved successfully!",$scope.showSuccessAlert=!1,$scope.showSuccess=function(value){$scope.showSuccessAlert=value}}(function(){var showErrorsModule;showErrorsModule=angular.module("ui.bootstrap.showErrors",[]),showErrorsModule.directive("showErrors",["$timeout","showErrorsConfig","$interpolate",function($timeout,showErrorsConfig,$interpolate){var getShowSuccess,getTrigger,linkFn;return getTrigger=function(options){var trigger;return trigger=showErrorsConfig.trigger,options&&null!=options.trigger&&(trigger=options.trigger),trigger},getShowSuccess=function(options){var showSuccess;return showSuccess=showErrorsConfig.showSuccess,options&&null!=options.showSuccess&&(showSuccess=options.showSuccess),showSuccess},linkFn=function(scope,el,attrs,formCtrl){var blurred,inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,trigger;if(blurred=!1,options=scope.$eval(attrs.showErrors),showSuccess=getShowSuccess(options),trigger=getTrigger(options),inputEl=el[0].querySelector(".form-control[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute and a 'form-control' class";return inputNgEl.bind(trigger,function(){return blurred=!0,toggleClasses(formCtrl[inputName].$invalid)}),scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return blurred?toggleClasses(invalid):void 0}),scope.$on("show-errors-check-validity",function(){return toggleClasses(formCtrl[inputName].$invalid)}),scope.$on("show-errors-reset",function(){return $timeout(function(){return el.removeClass("has-error"),el.removeClass("has-success"),blurred=!1},0,!1)}),toggleClasses=function(invalid){return el.toggleClass("has-error",invalid),showSuccess?el.toggleClass("has-success",!invalid):void 0}},{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),showErrorsModule.provider("showErrorsConfig",function(){var _showSuccess,_trigger;_showSuccess=!1,_trigger="blur",this.showSuccess=function(showSuccess){return _showSuccess=showSuccess},this.trigger=function(trigger){return _trigger=trigger},this.$get=function(){return{showSuccess:_showSuccess,trigger:_trigger}}})}).call(this),angular.module("app.logger",[]).provider("Logger",[function(){var isEnabled=!0;this.enabled=function(_isEnabled){isEnabled=!!_isEnabled},this.$get=["$log",function($log){var Logger=function(context){this.context=context};return Logger.getInstance=function(context){return new Logger(context)},Logger.supplant=function(str,o){return str.replace(/\{([^{}]*)\}/g,function(a,b){var r=o[b];return"string"==typeof r||"number"==typeof r?r:a})},Logger.getFormattedTimestamp=function(date){return Logger.supplant("{0}:{1}:{2}:{3}",[date.getHours(),date.getMinutes(),date.getSeconds(),date.getMilliseconds()])},Logger.prototype={_log:function(originalFn,args){if(isEnabled){var now=Logger.getFormattedTimestamp(new Date),message="",supplantData=[];switch(args.length){case 1:message=Logger.supplant("{0} - {1}: {2}",[now,this.context,args[0]]);break;case 3:supplantData=args[2],message=Logger.supplant("{0} - {1}::{2}('{3}')",[now,this.context,args[0],args[1]]);break;case 2:"string"==typeof args[1]?message=Logger.supplant("{0} - {1}::{2}('{3}')",[now,this.context,args[0],args[1]]):(supplantData=args[1],message=Logger.supplant("{0} - {1}: {2}",[now,this.context,args[0]]))}$log[originalFn].call(null,Logger.supplant(message,supplantData))}},log:function(){this._log("log",arguments)},info:function(){this._log("info",arguments)},warn:function(){this._log("warn",arguments)},debug:function(){this._log("debug",arguments)},error:function(){this._log("error",arguments)}},Logger}]}]),angular.module("app.meals",["ui.router","satellizer","ui.bootstrap","ui.bootstrap.showErrors","ngAnimate","n3-pie-chart","app.logger"]).config(["$stateProvider","$urlRouterProvider","$authProvider","$provide","LoggerProvider",moduleConfig]),angular.module("app.meals").run(["$http","$auth","$state","$rootScope","$location",function($http,$auth,$state,$rootScope,$location){$rootScope.checkAuthentication=function(){function complete(response,status,headers,config){void 0!==response&&($rootScope.currentUser=response.data.user,$rootScope.numberOfCalories=parseInt(response.data.user.calories_expected),$rootScope.menus=response.data.menus)}function failed(e){e.data&&e.data.description&&logger.error("XHR Failed for {0} : {1}",["refreshing user data",e.data.description]),$rootScope.currentUser=null,$location.url("/login")}$auth.isAuthenticated()?$http.get("api/auth/authenticate/user").then(complete)["catch"](failed):($rootScope.currentUser=null,$location.url("/login"))},$rootScope.checkAuthentication(),$rootScope.$on("$stateChangeStart",function(event){$rootScope.checkAuthentication()}),$rootScope.$on("$routeChangeStart",function(event){$rootScope.checkAuthentication()}),$rootScope.logout=function(){$auth.logout().then(function(){$rootScope.currentUser=null,$state.go("login")})}}]),angular.module("app.meals").filter("range",function(){return function(input,min,max){min=parseInt(min),max=parseInt(max);for(var i=min;max>i;i++)input.push(i);return input}}),angular.module("app.meals").service("modalService",["$uibModal",function($uibModal){var modalDefaults={backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:"/js/tpl/modal.html"},modalOptions={closeButtonText:"Close",actionButtonText:"OK",headerText:"Proceed?",bodyText:"Perform this action?"};this.showModal=function(customModalDefaults,customModalOptions){return customModalDefaults||(customModalDefaults={}),customModalDefaults.backdrop="static",this.show(customModalDefaults,customModalOptions)},this.show=function(customModalDefaults,customModalOptions){var tempModalDefaults={},tempModalOptions={};return angular.extend(tempModalDefaults,modalDefaults,customModalDefaults),angular.extend(tempModalOptions,modalOptions,customModalOptions),tempModalDefaults.controller||(tempModalDefaults.controller=function($scope,$uibModalInstance){$scope.modalOptions=tempModalOptions,$scope.modalOptions.ok=function(result){$uibModalInstance.close(result)},$scope.modalOptions.close=function(result){$uibModalInstance.dismiss("cancel")}}),$uibModal.open(tempModalDefaults).result}}]),angular.module("app.meals").directive("validNumber",function(){return{require:"?ngModel",link:function(scope,element,attrs,ngModelCtrl){ngModelCtrl&&(ngModelCtrl.$parsers.push(function(val){if(angular.isUndefined(val))var val="";var clean=val.replace(/[^0-9]/g,"");return val!==clean&&(ngModelCtrl.$setViewValue(clean),ngModelCtrl.$render()),clean}),element.bind("keypress",function(event){32===event.keyCode&&event.preventDefault()}))}}}),angular.module("app.meals").controller("AuthController",AuthController),AuthController.$inject=["$auth","$state","$http","$rootScope","$scope","Logger"],angular.module("app.meals").controller("MealsController",MealsController),angular.module("app.meals").filter("formatter",function(){return function(item){return("0"+item).slice(-2)}}),MealsController.$inject=["$http","$rootScope","$scope","$timeout","$filter","Logger","modalService"],angular.module("app.meals").controller("UsersController",UsersController),UsersController.$inject=["$http","$scope","$timeout","modalService","Logger"],angular.module("app.meals").controller("SettingsController",SettingsController),SettingsController.$inject=["$http","$rootScope","$scope","Logger"];